# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

spring.datasource.url = jdbc:mysql://localhost:3306/rijiadb?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=utf-8&autoReconnect=true

# Username and password
spring.datasource.username = root
spring.datasource.password = 123456

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# = Logging

# Level for loggers on classes inside the root package "netgloo" (and its 
# sub-packages). 
# Available levels are: TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF
# logging.level.com.rijia = DEBUG

# Fine-tuning a specific logger (for a single class)
# logging.level.rijia.controllers.HomeController = TRACE

# Specify the level for spring boot and hibernate's loggers
# logging.level.org.springframework.web = ERROR
# logging.level.org.hibernate = ERROR

# Log file location (in addition to the console)
# logging.file = ${java.io.tmpdir}/${spring.application.name}.log
# logging.file = workPlatform.log

# logging.config=src/main/resources/logConfig.xml